imp up.alloc
imp alloc.allocator
imp up.libc.mem.cvoidptr

type bytebuf_t = {
    *u8 ptr,
    usz len,
    usz cap,
}

fun new() -> bytebuf_t {
    return #bytebuf_t {
        ptr = alloc.null,
        len = 0usz,
        cap = 0usz,
    }
}

fun extend_fit(*bytebuf_t self, usz cap) {
    if self->cap < cap {
        let self->ptr = allocator.realloc($cvoidptr self->ptr, cap)
        let self->cap = cap
    }
}

fun push(*bytebuf_t self, u8 elem) {
    extend_fit(self, self->len + 1)
    let *(self->ptr + self->len) = elem
    let self->len = self->len + 1
}
